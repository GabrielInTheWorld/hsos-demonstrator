<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="1002px" preserveAspectRatio="none" style="width:2888px;height:1002px;" version="1.1" viewBox="0 0 2888 1002" width="2888px" zoomAndPan="magnify"><defs><filter height="300%" id="f15eehs4zaluu4" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><polygon fill="#FFFFFF" filter="url(#f15eehs4zaluu4)" points="1004,158,1061,158,1068,180.2969,1075,180.2969,1075,210.5938,1004,210.5938,1004,158" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="1004" x2="1068" y1="180.2969" y2="180.2969"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="51" x="1008" y="172.9951">Config</text><!--MD5=[1730ba789ac9c7cd81370c48bad6b155]
class LogColor--><rect codeLine="1" fill="#FEFECE" filter="url(#f15eehs4zaluu4)" height="355.3125" id="LogColor" style="stroke:#A80036;stroke-width:1.5;" width="86" x="310.5" y="7"/><ellipse cx="325.5" cy="23" fill="#EB937F" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M329.6094,29 L321.8906,29 L321.8906,16.6094 L329.6094,16.6094 L329.6094,18.7656 L324.3438,18.7656 L324.3438,21.4375 L329.1094,21.4375 L329.1094,23.5938 L324.3438,23.5938 L324.3438,26.8438 L329.6094,26.8438 L329.6094,29 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="54" x="339.5" y="27.1543">LogColor</text><line style="stroke:#A80036;stroke-width:1.5;" x1="311.5" x2="395.5" y1="39" y2="39"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="32" x="316.5" y="53.2104">Reset</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="34" x="316.5" y="66.0151">Bright</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="22" x="316.5" y="78.8198">Dim</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="66" x="316.5" y="91.6245">Underscore</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="27" x="316.5" y="104.4292">Blink</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="46" x="316.5" y="117.2339">Reverse</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="39" x="316.5" y="130.0386">Hidden</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="43" x="316.5" y="142.8433">FgBlack</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="34" x="316.5" y="155.6479">FgRed</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="48" x="316.5" y="168.4526">FgGreen</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="49" x="316.5" y="181.2573">FgYellow</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="38" x="316.5" y="194.062">FgBlue</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="61" x="316.5" y="206.8667">FgMagenta</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="41" x="316.5" y="219.6714">FgCyan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="40" x="316.5" y="232.4761">FgGray</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="43" x="316.5" y="245.2808">FgWhite</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="45" x="316.5" y="258.0854">BgBlack</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="36" x="316.5" y="270.8901">BgRed</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="50" x="316.5" y="283.6948">BgGreen</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="51" x="316.5" y="296.4995">BgYellow</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="40" x="316.5" y="309.3042">BgBlue</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="63" x="316.5" y="322.1089">BgMagenta</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="43" x="316.5" y="334.9136">BgCyan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="45" x="316.5" y="347.7183">BgWhite</text><line style="stroke:#A80036;stroke-width:1.5;" x1="311.5" x2="395.5" y1="354.3125" y2="354.3125"/><!--MD5=[248f897e4bb16c2722904b15df30346f]
class Logger--><rect codeLine="27" fill="#FEFECE" filter="url(#f15eehs4zaluu4)" height="163.2422" id="Logger" style="stroke:#A80036;stroke-width:1.5;" width="349" x="432" y="103"/><ellipse cx="580.75" cy="119" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M583.7188,124.6406 Q583.1406,124.9375 582.5,125.0781 Q581.8594,125.2344 581.1563,125.2344 Q578.6563,125.2344 577.3281,123.5938 Q576.0156,121.9375 576.0156,118.8125 Q576.0156,115.6875 577.3281,114.0313 Q578.6563,112.375 581.1563,112.375 Q581.8594,112.375 582.5,112.5313 Q583.1563,112.6875 583.7188,112.9844 L583.7188,115.7031 Q583.0938,115.125 582.5,114.8594 Q581.9063,114.5781 581.2813,114.5781 Q579.9375,114.5781 579.25,115.6563 Q578.5625,116.7188 578.5625,118.8125 Q578.5625,120.9063 579.25,121.9844 Q579.9375,123.0469 581.2813,123.0469 Q581.9063,123.0469 582.5,122.7813 Q583.0938,122.5 583.7188,121.9219 L583.7188,124.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="43" x="601.25" y="123.1543">Logger</text><line style="stroke:#A80036;stroke-width:1.5;" x1="433" x2="780" y1="135" y2="135"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="440" y="143"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="262" x="452" y="149.2104">_logMessageSubject: BehaviorSubject&lt;any[]&gt;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="433" x2="780" y1="155.8047" y2="155.8047"/><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="440" y="163.8047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="129" x="452" y="170.0151">getTimeString(): string</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="440" y="176.6094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="323" x="452" y="182.8198">formatDateTimeString(toFormat: string | number): string</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="440" y="189.4141"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="226" x="452" y="195.6245">info(color: string, message: any[]): void</text><ellipse cx="443" cy="205.2188" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="137" x="452" y="208.4292">log(message: any): void</text><ellipse cx="443" cy="218.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="148" x="452" y="221.2339">warn(message: any): void</text><ellipse cx="443" cy="230.8281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="155" x="452" y="234.0386">debug(message: any): void</text><ellipse cx="443" cy="243.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="149" x="452" y="246.8433">error(message: any): void</text><ellipse cx="443" cy="256.4375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="288" x="452" y="259.6479">getLogMessagesObservable(): Observable&lt;any[]&gt;</text><!--MD5=[033572b7c21041496d41fe55846a0912]
class AuthenticationType--><rect codeLine="38" fill="#FEFECE" filter="url(#f15eehs4zaluu4)" height="99.2188" id="AuthenticationType" style="stroke:#A80036;stroke-width:1.5;" width="153" x="816" y="135"/><ellipse cx="831" cy="151" fill="#EB937F" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M835.1094,157 L827.3906,157 L827.3906,144.6094 L835.1094,144.6094 L835.1094,146.7656 L829.8438,146.7656 L829.8438,149.4375 L834.6094,149.4375 L834.6094,151.5938 L829.8438,151.5938 L829.8438,154.8438 L835.1094,154.8438 L835.1094,157 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="121" x="845" y="155.1543">AuthenticationType</text><line style="stroke:#A80036;stroke-width:1.5;" x1="817" x2="968" y1="167" y2="167"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="63" x="822" y="181.2104">PASSWORD</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="30" x="822" y="194.0151">TOTP</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="32" x="822" y="206.8198">EMAIL</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="822" y="219.6245">FIDO</text><line style="stroke:#A80036;stroke-width:1.5;" x1="817" x2="968" y1="226.2188" y2="226.2188"/><!--MD5=[b2019df3b7d57eb9e74e144b9ace9589]
class ReplicaObject--><rect codeLine="44" fill="#FEFECE" filter="url(#f15eehs4zaluu4)" height="137.6328" id="ReplicaObject" style="stroke:#A80036;stroke-width:1.5;" width="410" x="148.5" y="524.5"/><ellipse cx="306.75" cy="540.5" fill="#B4A7E5" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M302.6719,536.2656 L302.6719,534.1094 L310.0625,534.1094 L310.0625,536.2656 L307.5938,536.2656 L307.5938,544.3438 L310.0625,544.3438 L310.0625,546.5 L302.6719,546.5 L302.6719,544.3438 L305.1406,544.3438 L305.1406,536.2656 L302.6719,536.2656 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="85" x="327.25" y="544.6543">ReplicaObject</text><line style="stroke:#A80036;stroke-width:1.5;" x1="149.5" x2="557.5" y1="556.5" y2="556.5"/><line style="stroke:#A80036;stroke-width:1.5;" x1="149.5" x2="557.5" y1="564.5" y2="564.5"/><ellipse cx="159.5" cy="575.5" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="174" x="168.5" y="578.7104">keys: () =&gt; Promise&lt;string[]&gt;</text><ellipse cx="159.5" cy="588.3047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="283" x="168.5" y="591.5151">set: &lt;T&gt;(key: string, obj: T) =&gt; Promise&lt;string&gt;</text><ellipse cx="159.5" cy="601.1094" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="384" x="168.5" y="604.3198">get: &lt;T&gt;(key: string, defaultValue?: T | undefined) =&gt; Promise&lt;T&gt;</text><ellipse cx="159.5" cy="613.9141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="168.5" y="617.1245">getAll: &lt;T&gt;() =&gt; Promise&lt;T[]&gt;</text><ellipse cx="159.5" cy="626.7188" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="255" x="168.5" y="629.9292">remove: (key: string) =&gt; Promise&lt;boolean&gt;</text><ellipse cx="159.5" cy="639.5234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="352" x="168.5" y="642.7339">find: &lt;T&gt;(fieldKey: keyof T, fieldValue: any) =&gt; Promise&lt;T[]&gt;</text><ellipse cx="159.5" cy="652.3281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="168.5" y="655.5386">clear: () =&gt; Promise&lt;void&gt;</text><!--MD5=[754ab9411d98ef1d0ddb8363fc1a630b]
class DatabasePort--><rect codeLine="53" fill="#FEFECE" filter="url(#f15eehs4zaluu4)" height="150.4375" id="DatabasePort" style="stroke:#A80036;stroke-width:1.5;" width="917" x="1110" y="109.5"/><ellipse cx="1520.75" cy="125.5" fill="#B4A7E5" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M1516.6719,121.2656 L1516.6719,119.1094 L1524.0625,119.1094 L1524.0625,121.2656 L1521.5938,121.2656 L1521.5938,129.3438 L1524.0625,129.3438 L1524.0625,131.5 L1516.6719,131.5 L1516.6719,129.3438 L1519.1406,129.3438 L1519.1406,121.2656 L1516.6719,121.2656 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="87" x="1541.25" y="129.6543">DatabasePort</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1111" x2="2026" y1="141.5" y2="141.5"/><line style="stroke:#A80036;stroke-width:1.5;" x1="1111" x2="2026" y1="149.5" y2="149.5"/><ellipse cx="1121" cy="160.5" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="221" x="1130" y="163.7104">keys(prefix: string): Promise&lt;string[]&gt;</text><ellipse cx="1121" cy="173.3047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="313" x="1130" y="176.5151">set(prefix: string, key: string, obj: T): Promise&lt;string&gt;</text><ellipse cx="1121" cy="186.1094" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="705" x="1130" y="189.3198">get(prefix: string, key: string, modelConstructor?: Constructor&lt;{}&gt; | undefined, defaultValue?: T | undefined): Promise&lt;T&gt;</text><ellipse cx="1121" cy="198.9141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="658" x="1130" y="202.1245">getAll(prefix: string, modelConstructor?: Constructor&lt;{}&gt; | undefined, defaultValue?: T | undefined): Promise&lt;T[]&gt;</text><ellipse cx="1121" cy="211.7188" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="310" x="1130" y="214.9292">remove(prefix: string, key: string): Promise&lt;boolean&gt;</text><ellipse cx="1121" cy="224.5234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="301" x="1130" y="227.7339">find(fieldKey: keyof T, fieldValue: any): Promise&lt;T[]&gt;</text><ellipse cx="1121" cy="237.3281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="1130" y="240.5386">clear(): Promise&lt;void&gt;</text><ellipse cx="1121" cy="250.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="891" x="1130" y="253.3433">getReplicaObject(prefix: string, modelConstructor?: (new &lt;T&gt;(...args: any) =&gt; T) | undefined, indexedFields?: string[] | undefined): Promise&lt;ReplicaObject&gt;</text><!--MD5=[863f33a902e6597bed57d3dcb5332027]
class DatabaseObject--><rect codeLine="63" fill="#FEFECE" filter="url(#f15eehs4zaluu4)" height="86.4141" id="DatabaseObject" style="stroke:#A80036;stroke-width:1.5;" width="133" x="594" y="550.5"/><ellipse cx="609" cy="566.5" fill="#B4A7E5" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M604.9219,562.2656 L604.9219,560.1094 L612.3125,560.1094 L612.3125,562.2656 L609.8438,562.2656 L609.8438,570.3438 L612.3125,570.3438 L612.3125,572.5 L604.9219,572.5 L604.9219,570.3438 L607.3906,570.3438 L607.3906,562.2656 L604.9219,562.2656 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="101" x="623" y="570.6543">DatabaseObject</text><line style="stroke:#A80036;stroke-width:1.5;" x1="595" x2="726" y1="582.5" y2="582.5"/><ellipse cx="605" cy="593.5" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="57" x="614" y="596.7104">_id: string</text><ellipse cx="605" cy="606.3047" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="65" x="614" y="609.5151">_rev: string</text><ellipse cx="605" cy="619.1094" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="60" x="614" y="622.3198">key: string</text><line style="stroke:#A80036;stroke-width:1.5;" x1="595" x2="726" y1="628.9141" y2="628.9141"/><!--MD5=[c1127193c72f3bb755a169d4b5fe99af]
class DatabaseAdapter--><rect codeLine="68" fill="#FEFECE" filter="url(#f15eehs4zaluu4)" height="214.4609" id="DatabaseAdapter" style="stroke:#A80036;stroke-width:1.5;" width="917" x="1110" y="486.5"/><ellipse cx="1508.75" cy="502.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M1511.7188,508.1406 Q1511.1406,508.4375 1510.5,508.5781 Q1509.8594,508.7344 1509.1563,508.7344 Q1506.6563,508.7344 1505.3281,507.0938 Q1504.0156,505.4375 1504.0156,502.3125 Q1504.0156,499.1875 1505.3281,497.5313 Q1506.6563,495.875 1509.1563,495.875 Q1509.8594,495.875 1510.5,496.0313 Q1511.1563,496.1875 1511.7188,496.4844 L1511.7188,499.2031 Q1511.0938,498.625 1510.5,498.3594 Q1509.9063,498.0781 1509.2813,498.0781 Q1507.9375,498.0781 1507.25,499.1563 Q1506.5625,500.2188 1506.5625,502.3125 Q1506.5625,504.4063 1507.25,505.4844 Q1507.9375,506.5469 1509.2813,506.5469 Q1509.9063,506.5469 1510.5,506.2813 Q1511.0938,506 1511.7188,505.4219 L1511.7188,508.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="111" x="1529.25" y="506.6543">DatabaseAdapter</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1111" x2="2026" y1="518.5" y2="518.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1118" y="526.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="201" x="1130" y="532.7104">database: PouchDB.Database&lt;{}&gt;</text><ellipse cx="1121" cy="542.3047" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="80" x="1130" y="545.5151">PREFIX: "auth"</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1111" x2="2026" y1="552.1094" y2="552.1094"/><ellipse cx="1121" cy="563.1094" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="221" x="1130" y="566.3198">keys(prefix: string): Promise&lt;string[]&gt;</text><ellipse cx="1121" cy="575.9141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="313" x="1130" y="579.1245">set(prefix: string, key: string, obj: T): Promise&lt;string&gt;</text><ellipse cx="1121" cy="588.7188" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="692" x="1130" y="591.9292">get(prefix: string, key: string, modelConstructor?: Constructor&lt;{}&gt; | undefined, defaultValue?: any): Promise&lt;DTO&lt;T&gt;&gt;</text><ellipse cx="1121" cy="601.5234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="310" x="1130" y="604.7339">remove(prefix: string, key: string): Promise&lt;boolean&gt;</text><ellipse cx="1121" cy="614.3281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="343" x="1130" y="617.5386">find(fieldKey: keyof T, fieldValue: any): Promise&lt;DTO&lt;T&gt;[]&gt;</text><ellipse cx="1121" cy="627.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="891" x="1130" y="630.3433">getReplicaObject(prefix: string, modelConstructor?: (new &lt;T&gt;(...args: any) =&gt; T) | undefined, indexedFields?: string[] | undefined): Promise&lt;ReplicaObject&gt;</text><ellipse cx="1121" cy="639.9375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="658" x="1130" y="643.1479">getAll(prefix: string, modelConstructor?: Constructor&lt;{}&gt; | undefined, defaultValue?: T | undefined): Promise&lt;T[]&gt;</text><ellipse cx="1121" cy="652.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="1130" y="655.9526">clear(): Promise&lt;void&gt;</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1118" y="662.5469"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="172" x="1130" y="668.7573">getPrefix(prefix: string): string</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1118" y="675.3516"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="274" x="1130" y="681.562">getPrefixedKey(prefix: string, key: string): string</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1118" y="688.1563"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="357" x="1130" y="694.3667">doPromise(name: string, promise: Promise&lt;T&gt;): Promise&lt;T&gt;</text><!--MD5=[c160724f8e3bb89ca8141a12554ac2e3]
class Collection--><rect codeLine="83" fill="#FEFECE" filter="url(#f15eehs4zaluu4)" height="60.8047" id="Collection" style="stroke:#A80036;stroke-width:1.5;" width="154" x="2114.5" y="154"/><ellipse cx="2156.95" cy="170" fill="#B4A7E5" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M2152.8719,165.7656 L2152.8719,163.6094 L2160.2625,163.6094 L2160.2625,165.7656 L2157.7938,165.7656 L2157.7938,173.8438 L2160.2625,173.8438 L2160.2625,176 L2152.8719,176 L2152.8719,173.8438 L2155.3406,173.8438 L2155.3406,165.7656 L2152.8719,165.7656 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="61" x="2177.05" y="174.1543">Collection</text><line style="stroke:#A80036;stroke-width:1.5;" x1="2115.5" x2="2267.5" y1="186" y2="186"/><ellipse cx="2125.5" cy="197" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="2134.5" y="200.2104">collectionString: string</text><line style="stroke:#A80036;stroke-width:1.5;" x1="2115.5" x2="2267.5" y1="206.8047" y2="206.8047"/><!--MD5=[0f7bc2b2700b8f1b8b0a0321832dd523]
class BaseModel--><rect codeLine="86" fill="#FEFECE" filter="url(#f15eehs4zaluu4)" height="86.4141" id="BaseModel" style="stroke:#A80036;stroke-width:1.5;" width="259" x="2062" y="550.5"/><ellipse cx="2147.75" cy="566.5" fill="#A9DCDF" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M2147.8594,561.8438 L2146.7031,566.9219 L2149.0313,566.9219 L2147.8594,561.8438 Z M2146.375,559.6094 L2149.3594,559.6094 L2152.7188,572 L2150.2656,572 L2149.5,568.9375 L2146.2188,568.9375 L2145.4688,572 L2143.0313,572 L2146.375,559.6094 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="68" x="2168.25" y="570.6543">BaseModel</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#000000;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="9" x="2315" y="547.5"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="7" x="2316" y="559.6387">T</text><line style="stroke:#A80036;stroke-width:1.5;" x1="2063" x2="2320" y1="582.5" y2="582.5"/><ellipse cx="2073" cy="593.5" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="2082" y="596.7104">collectionString: string</text><line style="stroke:#A80036;stroke-width:1.5;" x1="2063" x2="2320" y1="603.3047" y2="603.3047"/><polygon fill="#FFFF44" points="2073,609.3047,2077,613.3047,2073,617.3047,2069,613.3047" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="232" x="2082" y="617.5151">assign(input?: Partial&lt;T&gt; | undefined): T</text><ellipse cx="2073" cy="627.1094" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="233" x="2082" y="630.3198">update(input?: Partial&lt;T&gt; | undefined): T</text><!--MD5=[3fd616f346a44cd59a91eb10b19e157c]
class User--><rect codeLine="91" fill="#FEFECE" filter="url(#f15eehs4zaluu4)" height="163.2422" id="User" style="stroke:#A80036;stroke-width:1.5;" width="317" x="2033" y="825"/><ellipse cx="2172.75" cy="841" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M2175.7188,846.6406 Q2175.1406,846.9375 2174.5,847.0781 Q2173.8594,847.2344 2173.1563,847.2344 Q2170.6563,847.2344 2169.3281,845.5938 Q2168.0156,843.9375 2168.0156,840.8125 Q2168.0156,837.6875 2169.3281,836.0313 Q2170.6563,834.375 2173.1563,834.375 Q2173.8594,834.375 2174.5,834.5313 Q2175.1563,834.6875 2175.7188,834.9844 L2175.7188,837.7031 Q2175.0938,837.125 2174.5,836.8594 Q2173.9063,836.5781 2173.2813,836.5781 Q2171.9375,836.5781 2171.25,837.6563 Q2170.5625,838.7188 2170.5625,840.8125 Q2170.5625,842.9063 2171.25,843.9844 Q2171.9375,845.0469 2173.2813,845.0469 Q2173.9063,845.0469 2174.5,844.7813 Q2175.0938,844.5 2175.7188,843.9219 L2175.7188,846.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="29" x="2193.25" y="845.1543">User</text><line style="stroke:#A80036;stroke-width:1.5;" x1="2034" x2="2349" y1="857" y2="857"/><ellipse cx="2044" cy="868" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="2053" y="871.2104">username: string</text><ellipse cx="2044" cy="880.8047" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="77" x="2053" y="884.0151">userId: string</text><ellipse cx="2044" cy="893.6094" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="211" x="2053" y="896.8198">email?: { email: string; } | undefined</text><ellipse cx="2044" cy="906.4141" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="171" x="2053" y="909.6245">password?: string | undefined</text><ellipse cx="2044" cy="919.2188" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="2053" y="922.4292">totp?: { raw: string; } | undefined</text><ellipse cx="2044" cy="932.0234" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="2053" y="935.2339">fido?: PublicKeyObject | undefined</text><ellipse cx="2044" cy="944.8281" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="291" x="2053" y="948.0386">authenticationCredentials: AuthenticationCredential</text><ellipse cx="2044" cy="957.6328" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="237" x="2053" y="960.8433">authenticationTypes: AuthenticationType[]</text><ellipse cx="2044" cy="970.4375" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="157" x="2053" y="973.6479">COLLECTIONSTRING: "user"</text><line style="stroke:#A80036;stroke-width:1.5;" x1="2034" x2="2349" y1="980.2422" y2="980.2422"/><!--MD5=[4397ba3f25468a58f081bf0666d83f60]
class IUser--><rect fill="#FEFECE" filter="url(#f15eehs4zaluu4)" height="48" id="IUser" style="stroke:#A80036;stroke-width:1.5;" width="64" x="2375.5" y="569.5"/><ellipse cx="2390.5" cy="585.5" fill="#B4A7E5" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M2386.4219,581.2656 L2386.4219,579.1094 L2393.8125,579.1094 L2393.8125,581.2656 L2391.3438,581.2656 L2391.3438,589.3438 L2393.8125,589.3438 L2393.8125,591.5 L2386.4219,591.5 L2386.4219,589.3438 L2388.8906,589.3438 L2388.8906,581.2656 L2386.4219,581.2656 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="32" x="2404.5" y="589.6543">IUser</text><line style="stroke:#A80036;stroke-width:1.5;" x1="2376.5" x2="2438.5" y1="601.5" y2="601.5"/><line style="stroke:#A80036;stroke-width:1.5;" x1="2376.5" x2="2438.5" y1="609.5" y2="609.5"/><!--MD5=[2a4e54f6a4182fe25cccaf89cd34d22c]
class UserHandler--><rect codeLine="102" fill="#FEFECE" filter="url(#f15eehs4zaluu4)" height="137.6328" id="UserHandler" style="stroke:#A80036;stroke-width:1.5;" width="416" x="2458.5" y="115.5"/><ellipse cx="2623.25" cy="131.5" fill="#B4A7E5" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M2619.1719,127.2656 L2619.1719,125.1094 L2626.5625,125.1094 L2626.5625,127.2656 L2624.0938,127.2656 L2624.0938,135.3438 L2626.5625,135.3438 L2626.5625,137.5 L2619.1719,137.5 L2619.1719,135.3438 L2621.6406,135.3438 L2621.6406,127.2656 L2619.1719,127.2656 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="78" x="2643.75" y="135.6543">UserHandler</text><line style="stroke:#A80036;stroke-width:1.5;" x1="2459.5" x2="2873.5" y1="147.5" y2="147.5"/><line style="stroke:#A80036;stroke-width:1.5;" x1="2459.5" x2="2873.5" y1="155.5" y2="155.5"/><ellipse cx="2469.5" cy="166.5" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="259" x="2478.5" y="169.7104">create(user: Partial&lt;User&gt;): Promise&lt;User&gt;</text><ellipse cx="2469.5" cy="179.3047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="390" x="2478.5" y="182.5151">update(userId: string, updatedUser: Partial&lt;User&gt;): Promise&lt;void&gt;</text><ellipse cx="2469.5" cy="192.1094" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="325" x="2478.5" y="195.3198">getUserByUsername(username: string): Promise&lt;User&gt;</text><ellipse cx="2469.5" cy="204.9141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="281" x="2478.5" y="208.1245">getUserByUserId(userId: string): Promise&lt;User&gt;</text><ellipse cx="2469.5" cy="217.7188" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="181" x="2478.5" y="220.9292">getAllUsers(): Promise&lt;User[]&gt;</text><ellipse cx="2469.5" cy="230.5234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="273" x="2478.5" y="233.7339">hasUser(username: string): Promise&lt;boolean&gt;</text><ellipse cx="2469.5" cy="243.3281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="134" x="2478.5" y="246.5386">reset(): Promise&lt;void&gt;</text><!--MD5=[d52bb4e0af23ce21220aa3b18c0ca397]
class UserDto--><rect codeLine="113" fill="#FEFECE" filter="url(#f15eehs4zaluu4)" height="48" id="UserDto" style="stroke:#A80036;stroke-width:1.5;" width="83" x="2385" y="882.5"/><ellipse cx="2400" cy="898.5" fill="#B4A7E5" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M2395.9219,894.2656 L2395.9219,892.1094 L2403.3125,892.1094 L2403.3125,894.2656 L2400.8438,894.2656 L2400.8438,902.3438 L2403.3125,902.3438 L2403.3125,904.5 L2395.9219,904.5 L2395.9219,902.3438 L2398.3906,902.3438 L2398.3906,894.2656 L2395.9219,894.2656 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="51" x="2414" y="902.6543">UserDto</text><line style="stroke:#A80036;stroke-width:1.5;" x1="2386" x2="2467" y1="914.5" y2="914.5"/><line style="stroke:#A80036;stroke-width:1.5;" x1="2386" x2="2467" y1="922.5" y2="922.5"/><!--MD5=[e4ac4745f81aec2db60ad4ddae80b659]
class UserService--><rect codeLine="114" fill="#FEFECE" filter="url(#f15eehs4zaluu4)" height="342.5078" id="UserService" style="stroke:#A80036;stroke-width:1.5;" width="384" x="2474.5" y="422"/><ellipse cx="2625.25" cy="438" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M2628.2188,443.6406 Q2627.6406,443.9375 2627,444.0781 Q2626.3594,444.2344 2625.6563,444.2344 Q2623.1563,444.2344 2621.8281,442.5938 Q2620.5156,440.9375 2620.5156,437.8125 Q2620.5156,434.6875 2621.8281,433.0313 Q2623.1563,431.375 2625.6563,431.375 Q2626.3594,431.375 2627,431.5313 Q2627.6563,431.6875 2628.2188,431.9844 L2628.2188,434.7031 Q2627.5938,434.125 2627,433.8594 Q2626.4063,433.5781 2625.7813,433.5781 Q2624.4375,433.5781 2623.75,434.6563 Q2623.0625,435.7188 2623.0625,437.8125 Q2623.0625,439.9063 2623.75,440.9844 Q2624.4375,442.0469 2625.7813,442.0469 Q2626.4063,442.0469 2627,441.7813 Q2627.5938,441.5 2628.2188,440.9219 L2628.2188,443.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="74" x="2645.75" y="442.1543">UserService</text><line style="stroke:#A80036;stroke-width:1.5;" x1="2475.5" x2="2857.5" y1="454" y2="454"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2482.5" y="462"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="138" x="2494.5" y="468.2104">database: DatabasePort</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2482.5" y="474.8047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="2494.5" y="481.0151">authenticator: AuthGuard</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2482.5" y="487.6094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="2494.5" y="493.8198">userDatabase: ReplicaObject</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2482.5" y="500.4141"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2494.5" y="506.6245">userCounter: number</text><line style="stroke:#A80036;stroke-width:1.5;" x1="2475.5" x2="2857.5" y1="513.2188" y2="513.2188"/><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2482.5" y="521.2188"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="2494.5" y="527.4292">init(): Promise&lt;void&gt;</text><ellipse cx="2485.5" cy="537.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="296" x="2494.5" y="540.2339">create(partialUser: Partial&lt;User&gt;): Promise&lt;User&gt;</text><ellipse cx="2485.5" cy="549.8281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="356" x="2494.5" y="553.0386">update(userId: string, update: Partial&lt;User&gt;): Promise&lt;void&gt;</text><ellipse cx="2485.5" cy="562.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="216" x="2494.5" y="565.8433">delete(userId: string): Promise&lt;void&gt;</text><ellipse cx="2485.5" cy="575.4375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="325" x="2494.5" y="578.6479">getUserByUsername(username: string): Promise&lt;User&gt;</text><ellipse cx="2485.5" cy="588.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="281" x="2494.5" y="591.4526">getUserByUserId(userId: string): Promise&lt;User&gt;</text><ellipse cx="2485.5" cy="601.0469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="181" x="2494.5" y="604.2573">getAllUsers(): Promise&lt;User[]&gt;</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2482.5" y="610.8516"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="344" x="2494.5" y="617.062">insertNewUser(partialUser: Partial&lt;User&gt;): Promise&lt;User&gt;</text><ellipse cx="2485.5" cy="626.6563" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="250" x="2494.5" y="629.8667">getAllUsersForClient(): Promise&lt;UserDto[]&gt;</text><ellipse cx="2485.5" cy="639.4609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="273" x="2494.5" y="642.6714">hasUser(username: string): Promise&lt;boolean&gt;</text><ellipse cx="2485.5" cy="652.2656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="134" x="2494.5" y="655.4761">reset(): Promise&lt;void&gt;</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2482.5" y="662.0703"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="188" x="2494.5" y="668.2808">resetDatabase(): Promise&lt;void&gt;</text><ellipse cx="2485.5" cy="677.875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="358" x="2494.5" y="681.0854">onCreateEvent(partialUser: User, values: any): Promise&lt;void&gt;</text><ellipse cx="2485.5" cy="690.6797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="250" x="2494.5" y="693.8901">onGetEvent(userId: string): Promise&lt;User&gt;</text><ellipse cx="2485.5" cy="703.4844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="336" x="2494.5" y="706.6948">onUpdateEvent(update: User, values: any): Promise&lt;void&gt;</text><ellipse cx="2485.5" cy="716.2891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="2494.5" y="719.4995">onDeleteEvent(userId: string): Promise&lt;void&gt;</text><ellipse cx="2485.5" cy="729.0938" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="181" x="2494.5" y="732.3042">onResetEvent(): Promise&lt;void&gt;</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2482.5" y="738.8984"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="187" x="2494.5" y="745.1089">mockUserData(): Promise&lt;void&gt;</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2482.5" y="751.7031"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="223" x="2494.5" y="757.9136">getFirstIdCounter(): Promise&lt;number&gt;</text><!--MD5=[d7a66d72311a36bc48f68de8f64600c4]
class SocketData--><rect codeLine="139" fill="#FEFECE" filter="url(#f15eehs4zaluu4)" height="73.6094" id="SocketData" style="stroke:#A80036;stroke-width:1.5;" width="114" x="762.5" y="556.5"/><ellipse cx="781.55" cy="572.5" fill="#B4A7E5" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M777.4719,568.2656 L777.4719,566.1094 L784.8625,566.1094 L784.8625,568.2656 L782.3938,568.2656 L782.3938,576.3438 L784.8625,576.3438 L784.8625,578.5 L777.4719,578.5 L777.4719,576.3438 L779.9406,576.3438 L779.9406,568.2656 L777.4719,568.2656 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="73" x="796.45" y="576.6543">SocketData</text><line style="stroke:#A80036;stroke-width:1.5;" x1="763.5" x2="875.5" y1="588.5" y2="588.5"/><ellipse cx="773.5" cy="599.5" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="88" x="782.5" y="602.7104">socketId: string</text><ellipse cx="773.5" cy="612.3047" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="53" x="782.5" y="615.5151">data: any</text><line style="stroke:#A80036;stroke-width:1.5;" x1="763.5" x2="875.5" y1="622.1094" y2="622.1094"/><!--MD5=[8cfc44f48a060e3061bc72e17c2240ac]
class WebsocketUserService--><rect codeLine="143" fill="#FEFECE" filter="url(#f15eehs4zaluu4)" height="99.2188" id="WebsocketUserService" style="stroke:#A80036;stroke-width:1.5;" width="693" x="7" y="857"/><ellipse cx="277.75" cy="873" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M280.7188,878.6406 Q280.1406,878.9375 279.5,879.0781 Q278.8594,879.2344 278.1563,879.2344 Q275.6563,879.2344 274.3281,877.5938 Q273.0156,875.9375 273.0156,872.8125 Q273.0156,869.6875 274.3281,868.0313 Q275.6563,866.375 278.1563,866.375 Q278.8594,866.375 279.5,866.5313 Q280.1563,866.6875 280.7188,866.9844 L280.7188,869.7031 Q280.0938,869.125 279.5,868.8594 Q278.9063,868.5781 278.2813,868.5781 Q276.9375,868.5781 276.25,869.6563 Q275.5625,870.7188 275.5625,872.8125 Q275.5625,874.9063 276.25,875.9844 Q276.9375,877.0469 278.2813,877.0469 Q278.9063,877.0469 279.5,876.7813 Q280.0938,876.5 280.7188,875.9219 L280.7188,878.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="143" x="298.25" y="877.1543">WebsocketUserService</text><line style="stroke:#A80036;stroke-width:1.5;" x1="8" x2="699" y1="889" y2="889"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="897"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="172" x="27" y="903.2104">websocket: WebsocketHandler</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="909.8047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="147" x="27" y="916.0151">userHandler: UserService</text><line style="stroke:#A80036;stroke-width:1.5;" x1="8" x2="699" y1="922.6094" y2="922.6094"/><ellipse cx="18" cy="933.6094" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="56" x="27" y="936.8198">init(): void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="943.4141"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="667" x="27" y="949.6245">sendToSocket(message: SocketData, event: string, fn: (data: any, values?: any) =&gt; Promise&lt;any&gt;): Promise&lt;void&gt;</text><!--MD5=[e0f482161e8d997d997727b03fd64439]
reverse link DatabasePort to DatabaseAdapter--><path d="M1568.5,279.7004 C1568.5,341.4985 1568.5,422.1542 1568.5,486.2196 " fill="none" id="DatabasePort-backto-DatabaseAdapter" style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="1561.5001,279.5169,1568.5,259.5169,1575.5001,279.5169,1561.5001,279.5169" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[3abc23131bc6e143d7d8143a928a5d13]
reverse link Collection to BaseModel--><path d="M2191.5,235.3061 C2191.5,316.5466 2191.5,474.2708 2191.5,550.3704 " fill="none" id="Collection-backto-BaseModel" style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="2184.5001,235.2415,2191.5,215.2415,2198.5001,235.2414,2184.5001,235.2415" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[1e130013457fb82d735e9c713c9391f6]
reverse link BaseModel to User--><path d="M2191.5,656.8474 C2191.5,705.2562 2191.5,772.3594 2191.5,824.8062 " fill="none" id="BaseModel-backto-User" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="2184.5001,656.6927,2191.5,636.6927,2198.5001,656.6927,2184.5001,656.6927" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[f02b7b34b77c0a39789b190bf2d9726c]
reverse link IUser to User--><path d="M2395.5724,637.1001 C2384.3915,673.3256 2365.357,725.1893 2338.5,765 C2324.3354,785.9964 2306.6161,806.3023 2288.4326,824.6656 " fill="none" id="IUser-backto-User" style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="2388.8928,635.0023,2401.2478,617.7874,2402.3248,638.9497,2388.8928,635.0023" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[e1fd057e0ee0c7fa2ea26da7bb145dc3]
reverse link IUser to UserDto--><path d="M2410.1945,637.8882 C2414.2674,704.9846 2421.8536,829.9567 2425.0357,882.3772 " fill="none" id="IUser-backto-UserDto" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="2403.1841,637.9283,2408.9593,617.5409,2417.1584,637.0799,2403.1841,637.9283" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[c45e8fa026507f99050ae8ea85058d48]
reverse link UserHandler to UserService--><path d="M2666.5,273.9855 C2666.5,317.3698 2666.5,370.9882 2666.5,421.8272 " fill="none" id="UserHandler-backto-UserService" style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="2659.5001,273.8813,2666.5,253.8813,2673.5001,273.8812,2659.5001,273.8813" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[8ea9bedafa15db6984d93b05e423c035]
link LogColor to Logger--><!--MD5=[184488c082e88923ce337e3b84b9acf0]
link Logger to AuthenticationType--><!--MD5=[b48c8bbda04ec8fdd9dbf3256fc4e4a4]
link LogColor to ReplicaObject--><!--MD5=[b0ee35a9e75332c30da92f89ded1262a]
link ReplicaObject to DatabaseObject--><!--MD5=[ce51bee38f2baedb30e4e988ec6e5e5b]
link DatabaseObject to SocketData--><!--MD5=[43658ec4c068d16e576ce21ffcecc58f]
link ReplicaObject to WebsocketUserService--><!--MD5=[a763d1c8240dd721fed516f777029510]
@startuml
enum LogColor {
    Reset
    Bright
    Dim
    Underscore
    Blink
    Reverse
    Hidden
    FgBlack
    FgRed
    FgGreen
    FgYellow
    FgBlue
    FgMagenta
    FgCyan
    FgGray
    FgWhite
    BgBlack
    BgRed
    BgGreen
    BgYellow
    BgBlue
    BgMagenta
    BgCyan
    BgWhite
}
class Logger {
    -{static} _logMessageSubject: BehaviorSubject<any[]>
    -{static} getTimeString(): string
    -{static} formatDateTimeString(toFormat: string | number): string
    -{static} info(color: string, message: any[]): void
    +{static} log(message: any): void
    +{static} warn(message: any): void
    +{static} debug(message: any): void
    +{static} error(message: any): void
    +{static} getLogMessagesObservable(): Observable<any[]>
}
enum AuthenticationType {
    PASSWORD
    TOTP
    EMAIL
    FIDO
}
interface ReplicaObject {
    +keys: () => Promise<string[]>
    +set: <T>(key: string, obj: T) => Promise<string>
    +get: <T>(key: string, defaultValue?: T | undefined) => Promise<T>
    +getAll: <T>() => Promise<T[]>
    +remove: (key: string) => Promise<boolean>
    +find: <T>(fieldKey: keyof T, fieldValue: any) => Promise<T[]>
    +clear: () => Promise<void>
}
interface DatabasePort {
    +keys(prefix: string): Promise<string[]>
    +set(prefix: string, key: string, obj: T): Promise<string>
    +get(prefix: string, key: string, modelConstructor?: Constructor<{}> | undefined, defaultValue?: T | undefined): Promise<T>
    +getAll(prefix: string, modelConstructor?: Constructor<{}> | undefined, defaultValue?: T | undefined): Promise<T[]>
    +remove(prefix: string, key: string): Promise<boolean>
    +find(fieldKey: keyof T, fieldValue: any): Promise<T[]>
    +clear(): Promise<void>
    +getReplicaObject(prefix: string, modelConstructor?: (new <T>(...args: any) => T) | undefined, indexedFields?: string[] | undefined): Promise<ReplicaObject>
}
interface DatabaseObject {
    +_id: string
    +_rev: string
    +key: string
}
class DatabaseAdapter implements DatabasePort {
    -database: PouchDB.Database<{}>
    +keys(prefix: string): Promise<string[]>
    +set(prefix: string, key: string, obj: T): Promise<string>
    +get(prefix: string, key: string, modelConstructor?: Constructor<{}> | undefined, defaultValue?: any): Promise<DTO<T>>
    +remove(prefix: string, key: string): Promise<boolean>
    +find(fieldKey: keyof T, fieldValue: any): Promise<DTO<T>[]>
    +getReplicaObject(prefix: string, modelConstructor?: (new <T>(...args: any) => T) | undefined, indexedFields?: string[] | undefined): Promise<ReplicaObject>
    +getAll(prefix: string, modelConstructor?: Constructor<{}> | undefined, defaultValue?: T | undefined): Promise<T[]>
    +clear(): Promise<void>
    -getPrefix(prefix: string): string
    -getPrefixedKey(prefix: string, key: string): string
    -doPromise(name: string, promise: Promise<T>): Promise<T>
    +{static} PREFIX: "auth"
}
interface Collection {
    +collectionString: string
}
abstract class BaseModel<T> implements Collection {
    +collectionString: string
    #assign(input?: Partial<T> | undefined): T
    +update(input?: Partial<T> | undefined): T
}
class User extends BaseModel implements IUser {
    +username: string
    +userId: string
    +email?: { email: string; } | undefined
    +password?: string | undefined
    +totp?: { raw: string; } | undefined
    +fido?: PublicKeyObject | undefined
    +authenticationCredentials: AuthenticationCredential
    +authenticationTypes: AuthenticationType[]
    +{static} COLLECTIONSTRING: "user"
}
interface UserHandler {
    +create(user: Partial<User>): Promise<User>
    +update(userId: string, updatedUser: Partial<User>): Promise<void>
    +getUserByUsername(username: string): Promise<User>
    +getUserByUserId(userId: string): Promise<User>
    +getAllUsers(): Promise<User[]>
    +hasUser(username: string): Promise<boolean>
    +reset(): Promise<void>
}
namespace Config {
}
interface UserDto extends IUser
class UserService implements UserHandler {
    -database: DatabasePort
    -authenticator: AuthGuard
    -userDatabase: ReplicaObject
    -userCounter: number
    -init(): Promise<void>
    +create(partialUser: Partial<User>): Promise<User>
    +update(userId: string, update: Partial<User>): Promise<void>
    +delete(userId: string): Promise<void>
    +getUserByUsername(username: string): Promise<User>
    +getUserByUserId(userId: string): Promise<User>
    +getAllUsers(): Promise<User[]>
    -insertNewUser(partialUser: Partial<User>): Promise<User>
    +getAllUsersForClient(): Promise<UserDto[]>
    +hasUser(username: string): Promise<boolean>
    +reset(): Promise<void>
    -resetDatabase(): Promise<void>
    +onCreateEvent(partialUser: User, values: any): Promise<void>
    +onGetEvent(userId: string): Promise<User>
    +onUpdateEvent(update: User, values: any): Promise<void>
    +onDeleteEvent(userId: string): Promise<void>
    +onResetEvent(): Promise<void>
    -mockUserData(): Promise<void>
    -getFirstIdCounter(): Promise<number>
}
interface SocketData {
    +socketId: string
    +data: any
}
class WebsocketUserService {
    -websocket: WebsocketHandler
    -userHandler: UserService
    +init(): void
    -sendToSocket(message: SocketData, event: string, fn: (data: any, values?: any) => Promise<any>): Promise<void>
}
@enduml

PlantUML version 1.2020.22(Sun Dec 06 09:36:27 UTC 2020)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>